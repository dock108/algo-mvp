# A generic, single database configuration.

[alembic]
# path to migration scripts
script_location = src/algo_mvp/db/alembic

# template for migration file names, e.g. %%(rev)s_%%(slug)s.py
file_template = %%(rev)s_%%(slug)s

# sys.path path, will be prepended to sys.path if present.
# defaults to the current working directory.
prepend_sys_path = .

# timezone to use when rendering the date within the migration file
# as well as the filename.
# If specified, requires the python-dateutil library that can be
# installed with: pip install python-dateutil
# Defaults to None if not specified.
# timezone =

# sqlalchemy.url = driver://user:pass@host/dbname
# Defines the default database connection URL.
# This is overridden by the ALGO_DB_URL environment variable in env.py
# or by the --url flag in the CLI.
sqlalchemy.url = sqlite:///data/algo.db

# Multi-tenancy support.
# This is an advanced feature for managing multiple database schemas.
# For our single-schema setup, it's not directly used but good to be aware of.
# Default: None
# setting {schema_translate_map, include_schemas, include_object_types,
# compare_type, compare_server_default} has no effect if
# version_locations is not set as well.
# version_locations = %(here)s/versions_multi_tenant

# Logging configuration
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %%(levelname)-5.5s [%%(name)s] %%(message)s
datefmt = %%H:%%M:%%S
