name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]
    env:
      OPENBLAS_NUM_THREADS: 1  # Prevent memory issues with vectorbt
      NUMEXPR_MAX_THREADS: 4   # Prevent OOM/timeouts

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.8.0 # Or latest
    - name: Cache Poetry virtualenv
      uses: actions/cache@v4
      with:
        path: ~/.cache/pypoetry/virtualenvs
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-
    - name: Install dependencies
      run: poetry install --no-interaction
    - name: Install Playwright
      run: |
        poetry run python -m playwright install --with-deps
    - name: Run tests with coverage
      run: |
        poetry run pytest --cov=src --cov-fail-under=85
  lint-format-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11' # Or your preferred Python version for linting
    - name: Install Ruff
      run: pip install ruff
    - name: Run Ruff Linter
      run: ruff check .
    - name: Run Ruff Formatter Check
      run: ruff format --check .
